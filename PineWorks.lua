local a,b=term.getSize()local c=window.create(term.current(),1,1,a,b)local d=term.redirect(c)local e=require("Pine3D")local f={}local g={}f.isDown=g;local h=e.newFrame()f.frame=h;f.scene=require("modules.scene")(f,h)f.modelGen=e.models;f.effects=require("modules.effects")f.audio=require("modules.audio")f.loaders=require("modules.loaders")f.cameraControllers=require("modules.cameraControllers")local function i(j)end;f.log=i;local k=false;local function l()k=true;if periphemu then periphemu.create("PW:log","monitor")local m=peripheral.wrap("PW:log")function i(j)if type(j)=="table"then j=textutils.serialise(j)elseif type(j)=="function"then j="function"elseif type(j)=="nil"then j="nil"else j=tostring(j)end;local n=term.redirect(m)print(j)term.redirect(n)end;f.log=i end;i("[Booting PW]\nUse PW.log() for logging")end;f.enableDebug=l;function f.model(o,p)local q=e.loadModel(o)if not p or not p.skipNormalize then q=q:center():alignBottom():normalizeScaleY()end;return q end;function f.run(p)local r,s;if k then local t=require("modules.hudManager")s=t(h)r={fps=s:addText("FPS: xxx",1,1),polyCount=s:addText("Polygons: xxx",1,2),resolution=s:addText("Resolution: xxx",1,3),culled=s:addText("Culled: xxx",1,4)}end;local function u()while true do local v,w,x,y=os.pullEvent()local z=f.scene.selectedScene;if v=="key"then g[w]=true;if z.eventHandlers["key"]then z.eventHandlers["key"](w)end elseif v=="key_up"then g[w]=nil;if z.eventHandlers["key_up"]then z.eventHandlers["key_up"](w)end elseif v=="mouse_drag"then if z.eventHandlers["mouse_drag"]then z.eventHandlers["mouse_drag"](w,x,y)end elseif v=="mouse_click"then if z.eventHandlers["mouse_click"]then z.eventHandlers["mouse_click"](w,x,y)end elseif v=="mouse_scroll"then if z.eventHandlers["mouse_scroll"]then z.eventHandlers["mouse_scroll"](w,x,y)end elseif v=="term_resize"then local a,b=d.getSize()c.reposition(1,1,a,b)h:setSize(1,1,a,b)end;for A=#z.eventHandlersOnce,1,-1 do local B=z.eventHandlersOnce[A]if B.event==v then B.callback(w,x,y)table.remove(z.eventHandlersOnce,A)end end end end;local function C()local D=os.epoch("utc")local E=0;local F=D;while true do local G=os.epoch("utc")local H=(G-D)/1000;D=G;H=math.min(H,0.1)if k then E=E+1;if G>F+1000 then r.fps:setStr("FPS: "..E)E=1;F=G end end;local z=f.scene.selectedScene;if z then if z.eventHandlers["update"]then z.eventHandlers["update"](H,f)end;if z.camera.controller then z.camera.controller:update(H,f)end;for A=#z.objects,1,-1 do local I=z.objects[A]if I.eventHandlers["update"]then I.eventHandlers["update"](H,f)end end;for A=#z.envObjects,1,-1 do local I=z.envObjects[A]if I.eventHandlers["update"]then I.eventHandlers["update"](H,f)end end;h:setCamera(z.camera)h:drawObjects(z.envObjectsPine)local J=h:drawObjects(z.objectsPine)if k then r.culled:setStr("Culled: "..J.." / "..#z.objectsPine)local K=0;for A=1,#z.envObjectsPine do local I=z.envObjectsPine[A]local L=I[7]K=K+#L end;for A=1,#z.objectsPine do local I=z.objectsPine[A]local L=I[7]K=K+#L end;r.polyCount:setStr("Polygons: "..K)local a,b=term.getSize()r.resolution:setStr("Resolution: "..a.." x "..b.." ("..a*2 .." x "..b*3 ..")")end;h:drawBuffer()z.hud:render()if k then s:render()end;c.setVisible(true)c.setVisible(false)end;os.queueEvent("fake_event")os.pullEvent("fake_event")end end;local function M()parallel.waitForAny(u,C)end;local N,O=xpcall(M,debug.traceback)if not N then term.redirect(d)term.setBackgroundColor(colors.black)term.setTextColor(colors.red)term.clear()term.setCursorPos(1,1)print(O)end end;return f